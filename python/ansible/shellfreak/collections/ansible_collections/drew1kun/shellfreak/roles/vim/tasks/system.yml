---
- name: "[system] Generating /etc/vim/vimrc from template"
  ansible.builtin.template: src=vimrc.j2 dest="{{ vim_root_config }}" owner=root group=root mode=0644
  become: true

- name: "[system] Generating /etc/vim/vimrc.local from template"
  ansible.builtin.template: src=vimrc.local.j2 dest="{{ vim_root_local_config }}" owner=root group=root mode=0644
  become: true

- name: "[system] Generating /etc/vim/{{ vim_pm_config }} from template"
  ansible.builtin.template: src="{{ vim_pm_config }}.j2" dest="{{ vim_root_plugins }}" owner=root group=root mode=0644
  become: true

- name: "[system] Generating /etc/vim/vimrc.{{ plugin }} config files from templates"
  ansible.builtin.template:
    src: "{{ item.1.src }}"
    dest: "{{ item.1.path }}"
    owner: root
    group: root
    mode: 0644
  become: true
  loop: "{{ vim_plugins|product(vim_checklist)|list }}"
  when: "item.0.name in item.1.name"

- name: "[system] Copying .vim folder to /var/lib/vim/addons/"
  ansible.builtin.copy: src=vim/ dest=/var/lib/vim/addons/ directory_mode=0755 mode=0644
  become: true

# remove the old /root/.vim directory for idempotent plugin installation with vundle
# needed for system-wide installation only
- name: "[system] removing old /root/.vim directory if present"
  ansible.builtin.file: path=/root/.vim state=absent
  become: true

- name: '[user] Download en.utf-8.spl spell file from ftp'
  ansible.builtin.get_url:
    url: ftp://ftp.vim.org/pub/vim/runtime/spell/en.utf-8.spl
    dest: ~/.vim/spell/en.utf-8.spl
    owner: "{{ item }}"
    group: "{{ item if not 'Darwin' in ansible_system else 'wheel' if item == 'root' else 'staff' }}"
    mode: 0644
  register: vim_spell_result
  until: vim_spell_result is succeeded
  loop: "{{ vim_users }}"
  when: vim_users is defined
  become: true
  become_user: "{{ item }}"

- name: "[system] Setting EDITOR and TERM environment variables"
  ansible.builtin.blockinfile:
    path: /etc/profile.d/env_var.sh
    follow: true
    create: true
    mode: 0644
    owner: root
    group: root
    content: |
      export EDITOR="/usr/bin/vim visudo"
      export TERM="xterm-256color"  # For vim colors in tmux
    marker: "# {mark} ======== VIM role: Ansible managed block ========="
  become: true

- name: "[system] Include {{ vim_plugin_manager }} plugin manager and plugins installation tasks"
  ansible.builtin.include_tasks: "{{ vim_plugin_manager }}.yml"
