---
- name: "[main] Include variables for {{ vim_plugin_manager }} plugin manager"
  ansible.builtin.include_vars: "{{ vim_plugin_manager }}.yml"
  tags: vim

- name: "[main] Import cleanup tasks"
  ansible.builtin.import_tasks: cleanup.yml
  when: vim_cleanup
  tags:
    - vim
    - vim_cleanup

- name: "[main] Import dependencies installation tasks"
  ansible.builtin.import_tasks: dependencies.yml
  tags:
    - vim
    - vim_dependencies

- name: "[main] Include Darwin-specific tasks if provisioning MacOS"
  ansible.builtin.include_tasks:
    file: darwin.yml
    apply:
      tags: vim
  when: "'Darwin' in ansible_system"
  tags: vim

- name: "[main] Include vim installation tasks"
  ansible.builtin.include_tasks:
    file: linux.yml
    apply:
      tags: vim
  when: "not 'Darwin' in ansible_system"
  tags: vim

- name: "[main] Include vars for {{ vim_env }}-wide installation"
  ansible.builtin.include_vars: "{{ vim_env }}.yml"
  tags: vim

- name: "[main] Include system configuration tasks"
  ansible.builtin.include_tasks:
    file: system.yml
    apply:
      tags: vim
  when:
    - "'system' in vim_env"
    - "not 'Darwin' in ansible_system"
  tags: vim

- name: "[main] Include user configuration tasks"
  ansible.builtin.include_tasks:
    file: users.yml
    apply:
      tags: vim
  when: "'user' in vim_env or 'Darwin' in ansible_system"
  tags: vim

- name: "[main] Include vim-airline configuration if installing airline"
  ansible.builtin.include_tasks:
    file: airline.yml
    apply:
      tags: vim
  loop: "{{ vim_plugins|flatten(levels=1) }}"
  when: item.name == 'vim-airline/vim-airline'
  tags: vim

- name: "[main] Include neovim installation tasks"
  ansible.builtin.include_tasks:
    file: nvim.yml
    apply:
      tags: vim
  when: vim_neovim
  tags: vim
